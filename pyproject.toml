[tool.poetry]
name = "wrath-and-glory-space-hulk-generator"
version = "2.0.0"
description = "Generates Space Hulks based on the tables provided in the Redacted Records rulebook of Cubicle 7"
authors = ["LordFckHelmchen <dj_mack@gmx.de>"]
license = "GPLv3"
readme = "README.md"
homepage = "https://share.streamlit.io/lordfckhelmchen/wrath-and-glory-space-hulk-generator/main"
keywords = ["graphviz", "rpg-tool", "streamlit", "wrathandglory", "wrath-and-glory", "space-hulk-board-game"]
repository = "https://github.com/LordFckHelmchen/wrath-and-glory-space-hulk-generator"
classifiers = ["Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.urls]
Changelog = "https://github.com/LordFckHelmchen/wrath-and-glory-space-hulk-generator/releases"

[tool.poetry.dependencies]
python = "^3.9"
PyPDF2 = "^2.4.1"
fpdf = "^1.7.2"
graphviz = "^0.20"
pydantic = "^1.9.1"
streamlit = "^1.10.0"
img2pdf = "^0.4.4"

[tool.poetry.group.dev.dependencies]
black = {extras = ["d"], version = "^23.1.0"}
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
pytest-emoji = "^0.2.0"  # For avelzw/pytest-action
pytest-md = "^0.2.0"     # For avelzw/pytest-action
ruff = "^0.0.254"
toml = "^0.10.2"

[tool.black]
line-length = 120  # Keep in synch with tool.ruff

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
fail_under = 74

[tool.ruff]
select = ["ALL"]
ignore = ["A003",    # Class attributes "shadowing" built-ins
          "ANN002",  # Missing function annotation for *args
          "ANN003",  # Missing function annotation for **kwargs
          "ANN10",   # No annotation for self/cls - not useful
          "ANN401",  # Dynamically typed expressions are disallowed - disable by the plug-ing itself
          "COM",     # All commas warnings - covered by black
          "D",       # All pydocstyle warnings
          "G004",    # Logging statement uses f-string
          "N805",    # First argument of a method should be named self -> False-positive for pydantic validators
          "PT009",   # Use a regular `assert` instead of unittest-style `assertEqual`
          "T10",     # Debugger warnings
          "TRY003",  # Avoid specifying long messages outside the exception class
         ]
target-version = "py39"  # Keep in synch with .python-version
line-length = 120        # Keep in synch with tool.black

[tool.ruff.per-file-ignores]
"test_*.py" = ["ANN201",  # No return type check for tests
               "N802",    # Function name should be lowercase - used when expecting errors
               "SLF",     # Allow private member access in tests
               "T201",    # Allow print output in tests
              ]

[tool.ruff.isort]
force-single-line = true

[tool.ruff.flake8-type-checking]
strict = true

[tool.ruff.pydocstyle]
convention = "numpy"  # Accepts: "google", "numpy", or "pep257".

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_variables = ["pyproject.toml:version"]
